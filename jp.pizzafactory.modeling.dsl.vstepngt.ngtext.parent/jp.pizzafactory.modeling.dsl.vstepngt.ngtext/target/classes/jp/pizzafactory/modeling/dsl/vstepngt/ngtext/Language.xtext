// automatically generated by Xtext
grammar jp.pizzafactory.modeling.dsl.vstepngt.ngtext.Language with org.eclipse.xtext.common.Terminals

import "http://www.example.org/vstepngt" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

WorkspaceRoot returns Container:
	 elements+=WorkspaceElement (elements+=WorkspaceElement)*;

WorkspaceElement returns WorkspaceElement:
	Container | Abstraction | Aggregation | Testable | TestAssociation;

Component returns Component:
	Container | Testable;


Container returns Container:
	{Container}
	'Container'	(name=Identifiable)?
	'{'
		('title' title=Title)?
		(elements+=WorkspaceElement (elements+=WorkspaceElement)*)?
	'}';

Abstraction returns Abstraction:
	'Abstraction' (name=Identifiable)?
	'{'
		'superClass' superClass=[Testable]
		'subClass' subClass=[Testable]
	'}';

Aggregation returns Aggregation:
	{Aggregation}
	'Aggregation' (name=Identifiable)?
	'{'
		('stereotype' stereotype=Stereotype)?
		'owner' owner=[Component]
		'member' member=[Testable]
	'}';

Testable returns Testable:
	{Testable}
	(isRoot?='root')?
	'Testable' (name=Identifiable)?
	'{'
		('shortDescription' shortDescription=ShortDescription)?
	'}';

TestAssociation returns TestAssociation:
	'TestAssociation' (name=Identifiable)?
	'{'
		('stereotype' stereotype=Stereotype)?
		'type' type=AssociationType
		'source' source=[Testable]
		'target' target=[Testable]
	'}';

Identifiable returns Identifiable:
	ID;

Stereotype returns Stereotype:
	STRING;

ShortDescription returns ShortDescription:
	STRING;

Title returns ecore::EString:
	STRING;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum AssociationType returns AssociationType:
	COMBINATION = 'COMBINATION' | FRAMING = 'FRAMING' | SEQUENCE = 'SEQUENCE';
