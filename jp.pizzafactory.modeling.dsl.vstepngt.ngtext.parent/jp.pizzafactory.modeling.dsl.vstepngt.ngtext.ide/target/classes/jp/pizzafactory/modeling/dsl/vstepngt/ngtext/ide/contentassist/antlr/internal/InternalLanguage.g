/*
 * generated by Xtext 2.10.0
 */
grammar InternalLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package jp.pizzafactory.modeling.dsl.vstepngt.ngtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package jp.pizzafactory.modeling.dsl.vstepngt.ngtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import jp.pizzafactory.modeling.dsl.vstepngt.ngtext.services.LanguageGrammarAccess;

}
@parser::members {
	private LanguageGrammarAccess grammarAccess;

	public void setGrammarAccess(LanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleWorkspaceRoot
entryRuleWorkspaceRoot
:
{ before(grammarAccess.getWorkspaceRootRule()); }
	 ruleWorkspaceRoot
{ after(grammarAccess.getWorkspaceRootRule()); } 
	 EOF 
;

// Rule WorkspaceRoot
ruleWorkspaceRoot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkspaceRootAccess().getGroup()); }
		(rule__WorkspaceRoot__Group__0)
		{ after(grammarAccess.getWorkspaceRootAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkspaceElement
entryRuleWorkspaceElement
:
{ before(grammarAccess.getWorkspaceElementRule()); }
	 ruleWorkspaceElement
{ after(grammarAccess.getWorkspaceElementRule()); } 
	 EOF 
;

// Rule WorkspaceElement
ruleWorkspaceElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkspaceElementAccess().getAlternatives()); }
		(rule__WorkspaceElement__Alternatives)
		{ after(grammarAccess.getWorkspaceElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getGroup()); }
		(rule__Container__Group__0)
		{ after(grammarAccess.getContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstraction
entryRuleAbstraction
:
{ before(grammarAccess.getAbstractionRule()); }
	 ruleAbstraction
{ after(grammarAccess.getAbstractionRule()); } 
	 EOF 
;

// Rule Abstraction
ruleAbstraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractionAccess().getGroup()); }
		(rule__Abstraction__Group__0)
		{ after(grammarAccess.getAbstractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAggregation
entryRuleAggregation
:
{ before(grammarAccess.getAggregationRule()); }
	 ruleAggregation
{ after(grammarAccess.getAggregationRule()); } 
	 EOF 
;

// Rule Aggregation
ruleAggregation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAggregationAccess().getGroup()); }
		(rule__Aggregation__Group__0)
		{ after(grammarAccess.getAggregationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestable
entryRuleTestable
:
{ before(grammarAccess.getTestableRule()); }
	 ruleTestable
{ after(grammarAccess.getTestableRule()); } 
	 EOF 
;

// Rule Testable
ruleTestable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestableAccess().getGroup()); }
		(rule__Testable__Group__0)
		{ after(grammarAccess.getTestableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestAssociation
entryRuleTestAssociation
:
{ before(grammarAccess.getTestAssociationRule()); }
	 ruleTestAssociation
{ after(grammarAccess.getTestAssociationRule()); } 
	 EOF 
;

// Rule TestAssociation
ruleTestAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestAssociationAccess().getGroup()); }
		(rule__TestAssociation__Group__0)
		{ after(grammarAccess.getTestAssociationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifiable
entryRuleIdentifiable
:
{ before(grammarAccess.getIdentifiableRule()); }
	 ruleIdentifiable
{ after(grammarAccess.getIdentifiableRule()); } 
	 EOF 
;

// Rule Identifiable
ruleIdentifiable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifiableAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getIdentifiableAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStereotype
entryRuleStereotype
:
{ before(grammarAccess.getStereotypeRule()); }
	 ruleStereotype
{ after(grammarAccess.getStereotypeRule()); } 
	 EOF 
;

// Rule Stereotype
ruleStereotype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStereotypeAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getStereotypeAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShortDescription
entryRuleShortDescription
:
{ before(grammarAccess.getShortDescriptionRule()); }
	 ruleShortDescription
{ after(grammarAccess.getShortDescriptionRule()); } 
	 EOF 
;

// Rule ShortDescription
ruleShortDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShortDescriptionAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getShortDescriptionAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTitle
entryRuleTitle
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTitleAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getTitleAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssociationType
ruleAssociationType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationTypeAccess().getAlternatives()); }
		(rule__AssociationType__Alternatives)
		{ after(grammarAccess.getAssociationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkspaceElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkspaceElementAccess().getContainerParserRuleCall_0()); }
		ruleContainer
		{ after(grammarAccess.getWorkspaceElementAccess().getContainerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getWorkspaceElementAccess().getAbstractionParserRuleCall_1()); }
		ruleAbstraction
		{ after(grammarAccess.getWorkspaceElementAccess().getAbstractionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getWorkspaceElementAccess().getAggregationParserRuleCall_2()); }
		ruleAggregation
		{ after(grammarAccess.getWorkspaceElementAccess().getAggregationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getWorkspaceElementAccess().getTestableParserRuleCall_3()); }
		ruleTestable
		{ after(grammarAccess.getWorkspaceElementAccess().getTestableParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getWorkspaceElementAccess().getTestAssociationParserRuleCall_4()); }
		ruleTestAssociation
		{ after(grammarAccess.getWorkspaceElementAccess().getTestAssociationParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationTypeAccess().getCOMBINATIONEnumLiteralDeclaration_0()); }
		('COMBINATION')
		{ after(grammarAccess.getAssociationTypeAccess().getCOMBINATIONEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationTypeAccess().getFRAMINGEnumLiteralDeclaration_1()); }
		('FRAMING')
		{ after(grammarAccess.getAssociationTypeAccess().getFRAMINGEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationTypeAccess().getSEQUENCEEnumLiteralDeclaration_2()); }
		('SEQUENCE')
		{ after(grammarAccess.getAssociationTypeAccess().getSEQUENCEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkspaceRoot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkspaceRoot__Group__0__Impl
	rule__WorkspaceRoot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkspaceRoot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkspaceRootAccess().getElementsAssignment_0()); }
	(rule__WorkspaceRoot__ElementsAssignment_0)
	{ after(grammarAccess.getWorkspaceRootAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkspaceRoot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkspaceRoot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkspaceRoot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkspaceRootAccess().getElementsAssignment_1()); }
	(rule__WorkspaceRoot__ElementsAssignment_1)*
	{ after(grammarAccess.getWorkspaceRootAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__0__Impl
	rule__Container__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainerAction_0()); }
	()
	{ after(grammarAccess.getContainerAccess().getContainerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__1__Impl
	rule__Container__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainerKeyword_1()); }
	'Container'
	{ after(grammarAccess.getContainerAccess().getContainerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__2__Impl
	rule__Container__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getNameAssignment_2()); }
	(rule__Container__NameAssignment_2)?
	{ after(grammarAccess.getContainerAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__3__Impl
	rule__Container__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getContainerAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__4__Impl
	rule__Container__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getGroup_4()); }
	(rule__Container__Group_4__0)?
	{ after(grammarAccess.getContainerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__5__Impl
	rule__Container__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getGroup_5()); }
	(rule__Container__Group_5__0)?
	{ after(grammarAccess.getContainerAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getContainerAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_4__0__Impl
	rule__Container__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getTitleKeyword_4_0()); }
	'title'
	{ after(grammarAccess.getContainerAccess().getTitleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getTitleAssignment_4_1()); }
	(rule__Container__TitleAssignment_4_1)
	{ after(grammarAccess.getContainerAccess().getTitleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_5__0__Impl
	rule__Container__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getElementsAssignment_5_0()); }
	(rule__Container__ElementsAssignment_5_0)
	{ after(grammarAccess.getContainerAccess().getElementsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getElementsAssignment_5_1()); }
	(rule__Container__ElementsAssignment_5_1)*
	{ after(grammarAccess.getContainerAccess().getElementsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Abstraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__0__Impl
	rule__Abstraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getAbstractionKeyword_0()); }
	'Abstraction'
	{ after(grammarAccess.getAbstractionAccess().getAbstractionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__1__Impl
	rule__Abstraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getNameAssignment_1()); }
	(rule__Abstraction__NameAssignment_1)?
	{ after(grammarAccess.getAbstractionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__2__Impl
	rule__Abstraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAbstractionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__3__Impl
	rule__Abstraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getSuperClassKeyword_3()); }
	'superClass'
	{ after(grammarAccess.getAbstractionAccess().getSuperClassKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__4__Impl
	rule__Abstraction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getSuperClassAssignment_4()); }
	(rule__Abstraction__SuperClassAssignment_4)
	{ after(grammarAccess.getAbstractionAccess().getSuperClassAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__5__Impl
	rule__Abstraction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getSubClassKeyword_5()); }
	'subClass'
	{ after(grammarAccess.getAbstractionAccess().getSubClassKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__6__Impl
	rule__Abstraction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getSubClassAssignment_6()); }
	(rule__Abstraction__SubClassAssignment_6)
	{ after(grammarAccess.getAbstractionAccess().getSubClassAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Abstraction__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getAbstractionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__0__Impl
	rule__Aggregation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getAggregationAction_0()); }
	()
	{ after(grammarAccess.getAggregationAccess().getAggregationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__1__Impl
	rule__Aggregation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getAggregationKeyword_1()); }
	'Aggregation'
	{ after(grammarAccess.getAggregationAccess().getAggregationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__2__Impl
	rule__Aggregation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getNameAssignment_2()); }
	(rule__Aggregation__NameAssignment_2)?
	{ after(grammarAccess.getAggregationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__3__Impl
	rule__Aggregation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getAggregationAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__4__Impl
	rule__Aggregation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getGroup_4()); }
	(rule__Aggregation__Group_4__0)?
	{ after(grammarAccess.getAggregationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__5__Impl
	rule__Aggregation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getOwnerKeyword_5()); }
	'owner'
	{ after(grammarAccess.getAggregationAccess().getOwnerKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__6__Impl
	rule__Aggregation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getOwnerAssignment_6()); }
	(rule__Aggregation__OwnerAssignment_6)
	{ after(grammarAccess.getAggregationAccess().getOwnerAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__7__Impl
	rule__Aggregation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getMemberKeyword_7()); }
	'member'
	{ after(grammarAccess.getAggregationAccess().getMemberKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__8__Impl
	rule__Aggregation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getMemberAssignment_8()); }
	(rule__Aggregation__MemberAssignment_8)
	{ after(grammarAccess.getAggregationAccess().getMemberAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getAggregationAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group_4__0__Impl
	rule__Aggregation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getStereotypeKeyword_4_0()); }
	'stereotype'
	{ after(grammarAccess.getAggregationAccess().getStereotypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Aggregation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAggregationAccess().getStereotypeAssignment_4_1()); }
	(rule__Aggregation__StereotypeAssignment_4_1)
	{ after(grammarAccess.getAggregationAccess().getStereotypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Testable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__0__Impl
	rule__Testable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getTestableAction_0()); }
	()
	{ after(grammarAccess.getTestableAccess().getTestableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__1__Impl
	rule__Testable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getIsRootAssignment_1()); }
	(rule__Testable__IsRootAssignment_1)?
	{ after(grammarAccess.getTestableAccess().getIsRootAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__2__Impl
	rule__Testable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getTestableKeyword_2()); }
	'Testable'
	{ after(grammarAccess.getTestableAccess().getTestableKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__3__Impl
	rule__Testable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getNameAssignment_3()); }
	(rule__Testable__NameAssignment_3)?
	{ after(grammarAccess.getTestableAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__4__Impl
	rule__Testable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getTestableAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__5__Impl
	rule__Testable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getGroup_5()); }
	(rule__Testable__Group_5__0)?
	{ after(grammarAccess.getTestableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTestableAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Testable__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group_5__0__Impl
	rule__Testable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getShortDescriptionKeyword_5_0()); }
	'shortDescription'
	{ after(grammarAccess.getTestableAccess().getShortDescriptionKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Testable__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestableAccess().getShortDescriptionAssignment_5_1()); }
	(rule__Testable__ShortDescriptionAssignment_5_1)
	{ after(grammarAccess.getTestableAccess().getShortDescriptionAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestAssociation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__0__Impl
	rule__TestAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getTestAssociationKeyword_0()); }
	'TestAssociation'
	{ after(grammarAccess.getTestAssociationAccess().getTestAssociationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__1__Impl
	rule__TestAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getNameAssignment_1()); }
	(rule__TestAssociation__NameAssignment_1)?
	{ after(grammarAccess.getTestAssociationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__2__Impl
	rule__TestAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTestAssociationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__3__Impl
	rule__TestAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getGroup_3()); }
	(rule__TestAssociation__Group_3__0)?
	{ after(grammarAccess.getTestAssociationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__4__Impl
	rule__TestAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getTestAssociationAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__5__Impl
	rule__TestAssociation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getTypeAssignment_5()); }
	(rule__TestAssociation__TypeAssignment_5)
	{ after(grammarAccess.getTestAssociationAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__6__Impl
	rule__TestAssociation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getSourceKeyword_6()); }
	'source'
	{ after(grammarAccess.getTestAssociationAccess().getSourceKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__7__Impl
	rule__TestAssociation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getSourceAssignment_7()); }
	(rule__TestAssociation__SourceAssignment_7)
	{ after(grammarAccess.getTestAssociationAccess().getSourceAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__8__Impl
	rule__TestAssociation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getTargetKeyword_8()); }
	'target'
	{ after(grammarAccess.getTestAssociationAccess().getTargetKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__9__Impl
	rule__TestAssociation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getTargetAssignment_9()); }
	(rule__TestAssociation__TargetAssignment_9)
	{ after(grammarAccess.getTestAssociationAccess().getTargetAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getTestAssociationAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestAssociation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group_3__0__Impl
	rule__TestAssociation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getStereotypeKeyword_3_0()); }
	'stereotype'
	{ after(grammarAccess.getTestAssociationAccess().getStereotypeKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestAssociation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestAssociationAccess().getStereotypeAssignment_3_1()); }
	(rule__TestAssociation__StereotypeAssignment_3_1)
	{ after(grammarAccess.getTestAssociationAccess().getStereotypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WorkspaceRoot__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkspaceRootAccess().getElementsWorkspaceElementParserRuleCall_0_0()); }
		ruleWorkspaceElement
		{ after(grammarAccess.getWorkspaceRootAccess().getElementsWorkspaceElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkspaceRoot__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkspaceRootAccess().getElementsWorkspaceElementParserRuleCall_1_0()); }
		ruleWorkspaceElement
		{ after(grammarAccess.getWorkspaceRootAccess().getElementsWorkspaceElementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getNameIdentifiableParserRuleCall_2_0()); }
		ruleIdentifiable
		{ after(grammarAccess.getContainerAccess().getNameIdentifiableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__TitleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getTitleTitleParserRuleCall_4_1_0()); }
		ruleTitle
		{ after(grammarAccess.getContainerAccess().getTitleTitleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__ElementsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getElementsWorkspaceElementParserRuleCall_5_0_0()); }
		ruleWorkspaceElement
		{ after(grammarAccess.getContainerAccess().getElementsWorkspaceElementParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__ElementsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getElementsWorkspaceElementParserRuleCall_5_1_0()); }
		ruleWorkspaceElement
		{ after(grammarAccess.getContainerAccess().getElementsWorkspaceElementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractionAccess().getNameIdentifiableParserRuleCall_1_0()); }
		ruleIdentifiable
		{ after(grammarAccess.getAbstractionAccess().getNameIdentifiableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__SuperClassAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractionAccess().getSuperClassTestableCrossReference_4_0()); }
		(
			{ before(grammarAccess.getAbstractionAccess().getSuperClassTestableIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAbstractionAccess().getSuperClassTestableIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getAbstractionAccess().getSuperClassTestableCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Abstraction__SubClassAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractionAccess().getSubClassTestableCrossReference_6_0()); }
		(
			{ before(grammarAccess.getAbstractionAccess().getSubClassTestableIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAbstractionAccess().getSubClassTestableIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getAbstractionAccess().getSubClassTestableCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getNameIdentifiableParserRuleCall_2_0()); }
		ruleIdentifiable
		{ after(grammarAccess.getAggregationAccess().getNameIdentifiableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__StereotypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getStereotypeStereotypeParserRuleCall_4_1_0()); }
		ruleStereotype
		{ after(grammarAccess.getAggregationAccess().getStereotypeStereotypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__OwnerAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getOwnerComponentCrossReference_6_0()); }
		(
			{ before(grammarAccess.getAggregationAccess().getOwnerComponentIDTerminalRuleCall_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregationAccess().getOwnerComponentIDTerminalRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getAggregationAccess().getOwnerComponentCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregation__MemberAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAggregationAccess().getMemberTestableCrossReference_8_0()); }
		(
			{ before(grammarAccess.getAggregationAccess().getMemberTestableIDTerminalRuleCall_8_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAggregationAccess().getMemberTestableIDTerminalRuleCall_8_0_1()); }
		)
		{ after(grammarAccess.getAggregationAccess().getMemberTestableCrossReference_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__IsRootAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestableAccess().getIsRootRootKeyword_1_0()); }
		(
			{ before(grammarAccess.getTestableAccess().getIsRootRootKeyword_1_0()); }
			'root'
			{ after(grammarAccess.getTestableAccess().getIsRootRootKeyword_1_0()); }
		)
		{ after(grammarAccess.getTestableAccess().getIsRootRootKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestableAccess().getNameIdentifiableParserRuleCall_3_0()); }
		ruleIdentifiable
		{ after(grammarAccess.getTestableAccess().getNameIdentifiableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Testable__ShortDescriptionAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestableAccess().getShortDescriptionShortDescriptionParserRuleCall_5_1_0()); }
		ruleShortDescription
		{ after(grammarAccess.getTestableAccess().getShortDescriptionShortDescriptionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAssociationAccess().getNameIdentifiableParserRuleCall_1_0()); }
		ruleIdentifiable
		{ after(grammarAccess.getTestAssociationAccess().getNameIdentifiableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__StereotypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAssociationAccess().getStereotypeStereotypeParserRuleCall_3_1_0()); }
		ruleStereotype
		{ after(grammarAccess.getTestAssociationAccess().getStereotypeStereotypeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAssociationAccess().getTypeAssociationTypeEnumRuleCall_5_0()); }
		ruleAssociationType
		{ after(grammarAccess.getTestAssociationAccess().getTypeAssociationTypeEnumRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__SourceAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAssociationAccess().getSourceTestableCrossReference_7_0()); }
		(
			{ before(grammarAccess.getTestAssociationAccess().getSourceTestableIDTerminalRuleCall_7_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTestAssociationAccess().getSourceTestableIDTerminalRuleCall_7_0_1()); }
		)
		{ after(grammarAccess.getTestAssociationAccess().getSourceTestableCrossReference_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestAssociation__TargetAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestAssociationAccess().getTargetTestableCrossReference_9_0()); }
		(
			{ before(grammarAccess.getTestAssociationAccess().getTargetTestableIDTerminalRuleCall_9_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTestAssociationAccess().getTargetTestableIDTerminalRuleCall_9_0_1()); }
		)
		{ after(grammarAccess.getTestAssociationAccess().getTargetTestableCrossReference_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
